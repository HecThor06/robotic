#include <SPI.h>
#include <MFRC522.h>

// estos son los pines del lector RFID (el sensor)
#define RST_PIN 15
#define SS_PIN 21
MFRC522 mfrc522(SS_PIN, RST_PIN);

// Pines para los leds (para que prenda rojo y verde)
#define LED_VERDE 2
#define LED_ROJO 22

// los codigos unicos de cada tarjeta es como para registrar cada usuario diferente 
byte Usuario1[4] = {0x73, 0xDF, 0xAB, 0x28}; 
byte Usuario2[4] = {0x13, 0x94, 0x52, 0x2D}; 

// Almacén temporal para el usuario leído por el sensor 
byte ActualUID[4];

/* Función para comparar dos array (osea para comparar el codigo de una tarjeta que se pone en el sensor y otro que este en el codigo y ya se ve si es denegado o no)
tambien se puede modificar para agregar mas de dos usuarios*/
bool compareArray(byte *array1, byte *array2) {
  for (byte i = 0; i < 4; i++) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
}

void setup() {
  Serial.begin(115200);
  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_ROJO, OUTPUT);
  SPI.begin();             // Inicializa el bus SPI osea la libreria 
  mfrc522.PCD_Init();      // Inicializa el lector RFID igual este inicia la libreria 
  Serial.println("Control de acceso listo:");
}

void loop() {
  // Verificar si hay una tarjeta presente (funciona con el sensor en el proto)
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    Serial.print(F("UID de la tarjeta:"));
    
    // Leer el codigo en la tarjeta de la tarjeta
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      Serial.print((mfrc522.uid.uidByte[i] < 0x10) ? " 0" : " "); // Formato legible
      Serial.print(mfrc522.uid.uidByte[i], HEX);
      ActualUID[i] = mfrc522.uid.uidByte[i];
    }
    Serial.println();

    // Verifica si el codigo de cada tarjeta coincide con algún usuario registrado 
    if (compareArray(ActualUID, Usuario1) || compareArray(ActualUID, Usuario2)) {
      // Encender LED verde y apagar rojo
      digitalWrite(LED_VERDE, HIGH);
      digitalWrite(LED_ROJO, LOW);
      Serial.println("Acceso permitido");
      delay(3000); // Mantener encendido 3 segundos
      digitalWrite(LED_VERDE, LOW); // Apagar el LED verde
    } else {
      // Encender LED rojo y apagar verde
      digitalWrite(LED_ROJO, HIGH);
      digitalWrite(LED_VERDE, LOW);
      Serial.println("Acceso denegado");
      delay(3000); // Mantener encendido 3 segundos
      digitalWrite(LED_ROJO, LOW); // Apagar el LED rojo
    }

    // Detener la comunicación con la tarjeta
    mfrc522.PICC_HaltA();
  }
}
